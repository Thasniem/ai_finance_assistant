# Backend Configuration (Flask/FastAPI)
FLASK_APP=app.py            # Entry point for your backend app
FLASK_ENV=development       # Change to 'production' in production environment
SECRET_KEY=your-secret-key  # A secret key for signing sessions, etc. (use a secure one)

# MongoDB Database URL (MongoDB Atlas or local MongoDB instance)
MONGO_URI= http://Thasniem:thfjd150@mycluster.0ivtg.mongodb.net/?retryWrites=true&w=majority&appName=MyCluster
# For MongoDB Atlas example:
# MONGO_URI=mongodb+srv://username:password@cluster0.mongodb.net/finance_assistant_db?retryWrites=true&w=majority

# Other Backend Variables
PORT=5000                   # Port to run the Flask/FastAPI server on
DEBUG=True                  # Set to False in production to disable debug mode

# API Keys (e.g., for 3rd-party integrations, machine learning models, etc.)
MACHINE_LEARNING_API_KEY=your-ml-api-key-here  # If using any third-party ML APIs

# Frontend Configuration (React.js)
REACT_APP_API_URL=http://localhost:5000   # URL for the backend API (adjust if deploying)
REACT_APP_ENV=development                # Environment for the frontend (production or development)

# Email/SMS API Keys (if needed for user notifications)
SENDGRID_API_KEY=your-sendgrid-api-key   # For email notifications (e.g., with SendGrid)
TWILIO_API_KEY=your-twilio-api-key       # For SMS notifications (if applicable)

# Other Custom Variables
DEBUG_MODE=true               # Set to false in production
LOG_LEVEL=info                # Log level for debugging purposes

# Optional: Fraud Detection System Settings (e.g., thresholds)
FRAUD_DETECTION_THRESHOLD=0.8  # Threshold for flagging fraudulent transactions (example value)

# Docker Configuration (if using Docker)
DOCKER_IMAGE_NAME=finance-assistant-api
DOCKER_PORT=5000
